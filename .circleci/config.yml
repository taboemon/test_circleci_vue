version: 2.1
orbs:
  gcp-cloud-run: circleci/gcp-cloud-run@1.0.2

executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: node:12

commands:
  restore_npm:
    steps:
      - restore_cache:
          name: Restore npm dependencies
          key: npm-{{ checksum "package.json" }}

  save_npm:
    steps:
      - save_cache:
          name: Cache npm dependencies
          key: npm-{{ checksum "package.json" }}
          paths:
            - ~/workspace/node_modules

jobs:
  setup:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - save_npm

  lint:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - run: 
          name: Lint
          command: npm run lint
      - save_npm

  build:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - run: 
          name: Build
          command: npm run build
      - save_npm

  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - run: 
          name: Test
          command: npm run test:unit
      - save_npm

  build_and_deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
          platform: managed
          region: asia-northeast1
          service-name: test-circleci20200410
          unauthenticated: true
      - run:
          command: >
            # A simple example of how a deployed managed service could be
            verified or further tested.

            # This step will send request our "API" and fail if there is
            unexpected output.

            GCP_API_RESULTS=$(curl -s "$GCP_DEPLOY_ENDPOINT")

            if [ "$GCP_API_RESULTS" != "Hello World!" ]; then
              echo "Result is unexpected"
              echo 'Result: '
              curl -s "$GCP_DEPLOY_ENDPOINT"
              exit 1;
            fi
          name: Test managed deployed service.

workflows:
  pull-request:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - build:
          requires:
            - lint
      - test:
          requires:
            - build
      - build_and_deploy:
          requires:
            - test